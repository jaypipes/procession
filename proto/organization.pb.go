// Code generated by protoc-gen-go.
// source: organization.proto
// DO NOT EDIT!

package procession

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// The top-most grouping of users of the system. A user may have permissions to
// read or take action within one or more Organizations.
type Organization struct {
	Uuid                   string       `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	DisplayName            string       `protobuf:"bytes,2,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	Slug                   string       `protobuf:"bytes,3,opt,name=slug" json:"slug,omitempty"`
	ParentOrganizationUuid *StringValue `protobuf:"bytes,4,opt,name=parent_organization_uuid,json=parentOrganizationUuid" json:"parent_organization_uuid,omitempty"`
	Generation             uint32       `protobuf:"varint,100,opt,name=generation" json:"generation,omitempty"`
}

func (m *Organization) Reset()                    { *m = Organization{} }
func (m *Organization) String() string            { return proto.CompactTextString(m) }
func (*Organization) ProtoMessage()               {}
func (*Organization) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Organization) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Organization) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Organization) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *Organization) GetParentOrganizationUuid() *StringValue {
	if m != nil {
		return m.ParentOrganizationUuid
	}
	return nil
}

func (m *Organization) GetGeneration() uint32 {
	if m != nil {
		return m.Generation
	}
	return 0
}

type GetOrganizationRequest struct {
	Session *Session `protobuf:"bytes,1,opt,name=session" json:"session,omitempty"`
	Search  string   `protobuf:"bytes,2,opt,name=search" json:"search,omitempty"`
}

func (m *GetOrganizationRequest) Reset()                    { *m = GetOrganizationRequest{} }
func (m *GetOrganizationRequest) String() string            { return proto.CompactTextString(m) }
func (*GetOrganizationRequest) ProtoMessage()               {}
func (*GetOrganizationRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *GetOrganizationRequest) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *GetOrganizationRequest) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

type SetOrganizationFields struct {
	DisplayName            *StringValue `protobuf:"bytes,1,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	ParentOrganizationUuid *StringValue `protobuf:"bytes,2,opt,name=parent_organization_uuid,json=parentOrganizationUuid" json:"parent_organization_uuid,omitempty"`
}

func (m *SetOrganizationFields) Reset()                    { *m = SetOrganizationFields{} }
func (m *SetOrganizationFields) String() string            { return proto.CompactTextString(m) }
func (*SetOrganizationFields) ProtoMessage()               {}
func (*SetOrganizationFields) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *SetOrganizationFields) GetDisplayName() *StringValue {
	if m != nil {
		return m.DisplayName
	}
	return nil
}

func (m *SetOrganizationFields) GetParentOrganizationUuid() *StringValue {
	if m != nil {
		return m.ParentOrganizationUuid
	}
	return nil
}

type SetOrganizationRequest struct {
	Session            *Session               `protobuf:"bytes,1,opt,name=session" json:"session,omitempty"`
	Search             *StringValue           `protobuf:"bytes,2,opt,name=search" json:"search,omitempty"`
	OrganizationFields *SetOrganizationFields `protobuf:"bytes,3,opt,name=organization_fields,json=organizationFields" json:"organization_fields,omitempty"`
}

func (m *SetOrganizationRequest) Reset()                    { *m = SetOrganizationRequest{} }
func (m *SetOrganizationRequest) String() string            { return proto.CompactTextString(m) }
func (*SetOrganizationRequest) ProtoMessage()               {}
func (*SetOrganizationRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *SetOrganizationRequest) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *SetOrganizationRequest) GetSearch() *StringValue {
	if m != nil {
		return m.Search
	}
	return nil
}

func (m *SetOrganizationRequest) GetOrganizationFields() *SetOrganizationFields {
	if m != nil {
		return m.OrganizationFields
	}
	return nil
}

type SetOrganizationResponse struct {
	Organization *Organization `protobuf:"bytes,1,opt,name=organization" json:"organization,omitempty"`
}

func (m *SetOrganizationResponse) Reset()                    { *m = SetOrganizationResponse{} }
func (m *SetOrganizationResponse) String() string            { return proto.CompactTextString(m) }
func (*SetOrganizationResponse) ProtoMessage()               {}
func (*SetOrganizationResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *SetOrganizationResponse) GetOrganization() *Organization {
	if m != nil {
		return m.Organization
	}
	return nil
}

type OrganizationListFilters struct {
	Uuids        []string `protobuf:"bytes,1,rep,name=uuids" json:"uuids,omitempty"`
	DisplayNames []string `protobuf:"bytes,2,rep,name=display_names,json=displayNames" json:"display_names,omitempty"`
	Slugs        []string `protobuf:"bytes,3,rep,name=slugs" json:"slugs,omitempty"`
}

func (m *OrganizationListFilters) Reset()                    { *m = OrganizationListFilters{} }
func (m *OrganizationListFilters) String() string            { return proto.CompactTextString(m) }
func (*OrganizationListFilters) ProtoMessage()               {}
func (*OrganizationListFilters) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *OrganizationListFilters) GetUuids() []string {
	if m != nil {
		return m.Uuids
	}
	return nil
}

func (m *OrganizationListFilters) GetDisplayNames() []string {
	if m != nil {
		return m.DisplayNames
	}
	return nil
}

func (m *OrganizationListFilters) GetSlugs() []string {
	if m != nil {
		return m.Slugs
	}
	return nil
}

type OrganizationListRequest struct {
	Session *Session                 `protobuf:"bytes,1,opt,name=session" json:"session,omitempty"`
	Filters *OrganizationListFilters `protobuf:"bytes,2,opt,name=filters" json:"filters,omitempty"`
	Options *SearchOptions           `protobuf:"bytes,3,opt,name=options" json:"options,omitempty"`
}

func (m *OrganizationListRequest) Reset()                    { *m = OrganizationListRequest{} }
func (m *OrganizationListRequest) String() string            { return proto.CompactTextString(m) }
func (*OrganizationListRequest) ProtoMessage()               {}
func (*OrganizationListRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *OrganizationListRequest) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

func (m *OrganizationListRequest) GetFilters() *OrganizationListFilters {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *OrganizationListRequest) GetOptions() *SearchOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

func init() {
	proto.RegisterType((*Organization)(nil), "procession.Organization")
	proto.RegisterType((*GetOrganizationRequest)(nil), "procession.GetOrganizationRequest")
	proto.RegisterType((*SetOrganizationFields)(nil), "procession.SetOrganizationFields")
	proto.RegisterType((*SetOrganizationRequest)(nil), "procession.SetOrganizationRequest")
	proto.RegisterType((*SetOrganizationResponse)(nil), "procession.SetOrganizationResponse")
	proto.RegisterType((*OrganizationListFilters)(nil), "procession.OrganizationListFilters")
	proto.RegisterType((*OrganizationListRequest)(nil), "procession.OrganizationListRequest")
}

func init() { proto.RegisterFile("organization.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 442 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xcb, 0x6e, 0x13, 0x31,
	0x14, 0x95, 0xd3, 0xd2, 0xa8, 0x37, 0x13, 0x16, 0x2e, 0x24, 0xa6, 0x0b, 0x94, 0x4e, 0x37, 0xb3,
	0x21, 0x48, 0xe9, 0x0e, 0xc1, 0xb6, 0x6c, 0x10, 0x15, 0x8e, 0x80, 0xe5, 0xc8, 0x74, 0xdc, 0xc1,
	0x68, 0x6a, 0x1b, 0x7b, 0x46, 0x08, 0x3e, 0x88, 0xaf, 0xe0, 0x13, 0xf8, 0x28, 0xe4, 0xc7, 0x08,
	0x9b, 0x42, 0x16, 0x11, 0xab, 0xf8, 0x3e, 0x8e, 0xef, 0x3d, 0xe7, 0x38, 0x03, 0x58, 0x99, 0x96,
	0x49, 0xf1, 0x8d, 0xf5, 0x42, 0xc9, 0xb5, 0x36, 0xaa, 0x57, 0x18, 0xb4, 0x51, 0xd7, 0xdc, 0x5a,
	0xa1, 0xe4, 0x69, 0x61, 0x39, 0x33, 0xd7, 0x1f, 0x43, 0xe5, 0x74, 0x6e, 0x43, 0x3a, 0x86, 0xf7,
	0xbf, 0x18, 0xa6, 0x35, 0x37, 0x36, 0xc4, 0xe5, 0x4f, 0x04, 0xc5, 0x55, 0x72, 0x1f, 0xc6, 0x70,
	0x38, 0x0c, 0xa2, 0x21, 0x68, 0x85, 0xaa, 0x63, 0xea, 0xcf, 0xf8, 0x0c, 0x8a, 0x46, 0x58, 0xdd,
	0xb1, 0xaf, 0xb5, 0x64, 0xb7, 0x9c, 0x4c, 0x7c, 0x6d, 0x16, 0x73, 0xaf, 0xd9, 0x2d, 0x77, 0x30,
	0xdb, 0x0d, 0x2d, 0x39, 0x08, 0x30, 0x77, 0xc6, 0x6f, 0x80, 0x68, 0x66, 0xb8, 0xec, 0xeb, 0x74,
	0xe3, 0xda, 0x5f, 0x7f, 0xb8, 0x42, 0xd5, 0x6c, 0xb3, 0x5c, 0xff, 0xde, 0x7b, 0xbd, 0xed, 0x8d,
	0x90, 0xed, 0x3b, 0xd6, 0x0d, 0x9c, 0x2e, 0x02, 0x30, 0xdd, 0xec, 0xad, 0xdb, 0xe4, 0x31, 0x40,
	0xcb, 0x25, 0x37, 0x3e, 0x43, 0x9a, 0x15, 0xaa, 0xe6, 0x34, 0xc9, 0x94, 0x35, 0x2c, 0x5e, 0xf2,
	0x0c, 0x46, 0xf9, 0xe7, 0x81, 0xdb, 0x1e, 0x3f, 0x81, 0x69, 0x54, 0xc2, 0x53, 0x9b, 0x6d, 0x4e,
	0xb2, 0xd9, 0xe1, 0x97, 0x8e, 0x3d, 0x78, 0x01, 0x47, 0x41, 0xc6, 0x48, 0x36, 0x46, 0xe5, 0x77,
	0x04, 0x0f, 0xb7, 0xf9, 0x84, 0x4b, 0xc1, 0xbb, 0xc6, 0xe2, 0x67, 0x7f, 0x88, 0x84, 0x76, 0x33,
	0xcc, 0xd4, 0xdb, 0xa5, 0xd4, 0x64, 0x2f, 0xa5, 0x9c, 0xb1, 0x8b, 0xed, 0x7f, 0x91, 0xe2, 0x69,
	0x26, 0xc5, 0x8e, 0x55, 0x62, 0x1b, 0xa6, 0x70, 0x92, 0xd1, 0xb8, 0xf1, 0x02, 0xf9, 0xa7, 0x31,
	0xdb, 0x9c, 0xe5, 0xb3, 0xfe, 0xa2, 0x24, 0xcd, 0x1e, 0x78, 0xc8, 0x95, 0xef, 0x61, 0x79, 0x87,
	0x8d, 0xd5, 0x4a, 0x5a, 0x8e, 0x9f, 0x43, 0x91, 0x02, 0x22, 0x27, 0x92, 0xce, 0xc9, 0x70, 0x59,
	0x77, 0xf9, 0x09, 0x96, 0x69, 0xf5, 0x95, 0xb0, 0xfd, 0xa5, 0xe8, 0x7a, 0x6e, 0x2c, 0x7e, 0x00,
	0xf7, 0x9c, 0x03, 0x96, 0xa0, 0xd5, 0x41, 0x75, 0x4c, 0x43, 0x80, 0xcf, 0x61, 0x9e, 0xfa, 0x6c,
	0xc9, 0xc4, 0x57, 0x8b, 0xc4, 0x4f, 0x0f, 0x75, 0x7f, 0x01, 0x47, 0xda, 0x43, 0x7d, 0x50, 0xfe,
	0x40, 0x77, 0x87, 0xed, 0x69, 0xca, 0x0b, 0x98, 0xde, 0x84, 0x35, 0xa3, 0x2b, 0xe7, 0xff, 0xe2,
	0x9b, 0x30, 0xa2, 0x23, 0x06, 0x5f, 0xc0, 0x54, 0x69, 0x57, 0x1d, 0x6d, 0x79, 0x94, 0x4f, 0x73,
	0x3e, 0x5e, 0x85, 0x06, 0x3a, 0x76, 0x7e, 0x38, 0xf2, 0x9f, 0x8c, 0x8b, 0x5f, 0x01, 0x00, 0x00,
	0xff, 0xff, 0xd9, 0xff, 0xd2, 0x89, 0x81, 0x04, 0x00, 0x00,
}
